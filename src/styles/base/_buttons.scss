// Buttons
// =======

// scss-lint:disable SelectorDepth NestingDepth
// Need to override BootStrap

$btn-font-size: 15px;
$dropdown-font-size: 14px;
$btn-min-width: rem(120px);
$dropdown-min-width: rem(320px);
$btn-top-padding: em(8px, $btn-font-size);
$btn-horizontal-padding: em(18px, $btn-font-size);
$btn-bottom-padding: em(7px, $btn-font-size);
$dropdown-top-padding: em(9px, $dropdown-font-size);
$dropdown-horizontal-padding: em(18px, $dropdown-font-size);
$dropdown-bottom-padding: em(8px, $dropdown-font-size);
$btn-text-color: $white;
$btn-primary-background: $pale-blue;
$btn-secondary-background: transparent;
$btn-danger-background: $red;
$btn-success-background: $gradient-teal;
$lt-caret-color: $silver-60;

.btn {
  min-width: $btn-min-width;
  padding: $btn-top-padding $btn-horizontal-padding $btn-bottom-padding;
  font-size: rem($btn-font-size);
  font-weight: 700;
  color: $btn-text-color;
  text-transform: uppercase;
  border: 0;
  border-radius: 2px;
  stroke: $btn-text-color;
  fill: $btn-text-color;

  @include print {
    // scss-lint:disable ImportantRule
    // Need to override Bootstrap link href for buttons
    &::after {
      content: '' !important;
    }
  }

  // scss-lint:disable QualifyingElement
  // Need to override Bootstrap
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    opacity: 0.2;
  }

  &.dropdown-toggle,
  &.btn-icon,
  &.btn-link {
    min-width: 0;
  }

  &,
  &:hover,
  &:focus,
  &:active,
  &.active,
  &:active:hover,
  &.active:focus {
    color: $btn-text-color;
    outline: none;
    box-shadow: none;
  }

  &:focus {
    box-shadow: 0 0 0 2px rgba($black, 0.4);
  }

  &.btn-outline {
    color: $dt-text-color;
    background-color: transparent !important;
    border: 2px solid rgba($pale-blue, 0.1);

    .light-theme & {
      color: $lt-text-color;
      background-color: rgba($black, 0.1);
      fill: $lt-text-color;
      stroke: $lt-text-color;
    }
  }

  &.btn-icon {
    position: relative;
    width: $btn-height;
    height: $btn-height;
    padding: 0;
    line-height: $btn-height;
    vertical-align: middle;

    @include md {
      width: $md-btn-height;
      line-height: $md-btn-height;
    }

    &.btn-header {
      width: $header-btn-height;

      @include md {
        width: $md-header-btn-height;
      }
    }
  }

  &.btn-sm {
    height: $btn-sm-height;
    line-height: $btn-sm-height;

    @include md {
      height: $md-btn-sm-height;
      line-height: $md-btn-sm-height;
    }

    &.btn-tertiary {
      min-width: 0;
      text-transform: uppercase;
    }

    &.btn-icon {
      width: $btn-sm-height;
      line-height: $btn-sm-height;

      @include md {
        width: $md-btn-sm-height;
        line-height: $md-btn-sm-height;
      }
    }
  }

  &.sm-padding {
    padding: 0 ($btn-height / 4);

    @include md {
      padding: 0 ($md-btn-height / 4);
    }
  }

  &.btn-round {
    border-radius: 50%;
  }

  &.btn-header {
    height: $header-btn-height;
    margin-top: ($header-height - $header-btn-height) / 2;
    margin-right: 8px;
    margin-bottom: ($header-height - $header-btn-height) / 2;
    margin-left: 8px;
    line-height: $header-btn-height;
    color: $dt-text-color;
    background-color: rgba($pale-blue, 0.1);
    fill: $dt-text-color;
    stroke: $dt-text-color;

    @include md {
      margin-top: ($md-header-height - $md-header-btn-height) / 2;
      margin-bottom: ($md-header-height - $md-header-btn-height) / 2;
      line-height: $md-header-btn-height;
    }

    &.btn-icon {
      .icon {
        transform: translate(-50%, -50%) scale(1, 1);
      }
    }

    &.btn-alerts {
      svg {
        width: 11px;
      }
    }

    &.btn-help {
      svg {
        width: 8px;
      }
    }
  }

  &.btn-user-menu,
  .btn-group > &.btn.btn-user-menu:first-child {
    width: $header-btn-height;
    height: $header-btn-height;
    margin-top: ($header-height - $header-btn-height) / 2;
    margin-right: 20px;
    margin-bottom: ($header-height - $header-btn-height) / 2;
    margin-left: 8px;
    overflow: hidden;
    background: url('../assets/img/img-user.jpg') center center no-repeat;
    background-size: cover;

    @include md {
      margin-top: ($md-header-height - $md-header-btn-height) / 2;
      margin-bottom: ($md-header-height - $md-header-btn-height) / 2;
    }

    img {
      display: block;
      width: 100%;
      height: 100%;
    }
  }

  > a {
    display: block;
    height: 100%;
  }

  &.has-icon {

    .icon-holder {
      position: relative;
      display: inline-block;
      width: 25px;
      height: 25px;
      margin: 17px 10px 0 0;
      vertical-align: top;
      background-color: rgba($black, 0.1);
      border-radius: 50%;

      @include md {
        margin: 7px 10px 0 0;
      }

      > .icon {
        position: absolute;
        top: 3px;
        left: 8px;
        width: 7px;
        fill: $white;
      }
    }

    > .icon {
      display: inline-block;
      margin-right: 20px;
      vertical-align: middle;
      fill: inherit;
      stroke: inherit;
    }
  }
}

.header-toggle {
  position: relative;
  height: auto;
  min-width: 0;
  padding: 0 30px 0 0;
  line-height: inherit;
  text-align: left;

  h3 {
    max-width: calc(100% - #{$bar-height});
    white-space: normal;
  }

  .caret {
    position: absolute;
    top: 50%;
    right: 0;
    display: block;
    width: $bar-height / 2;
    height: $bar-height / 2;
    color: $white;
    border: 0;
    transform: translateY(-50%);

    .content-layout__header & {
      vertical-align: middle;
    }

    &::before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      content: '';

      .dark-theme &,
      .light-theme & {
        background-color: rgba($black, 0.2);
      }
    }

    &::after {
      position: absolute;
      top: 50%;
      left: 50%;
      display: block;
      width: 0;
      height: 0;
      vertical-align: middle;
      border-top: 4px solid;
      border-right: 4px solid transparent;
      border-left: 4px solid transparent;
      content: '';
      transform: translate(-50%, -50%);
    }
  }

  .icon {
    display: inline-block;
    margin-left: 10px;
    vertical-align: middle;
    border-width: 0;
  }

  &:hover .icon,
  &:focus .icon {

    .dark-theme &,
    .light-theme & {
      stroke: $pale-blue;
    }
  }

  .dark-theme .open > &,
  .light-theme .open > & {

    &,
    &:hover,
    &:active,
    &:focus,
    .icon {
      color: $pale-blue;
      background-color: transparent;
      box-shadow: none;
      stroke: $pale-blue;
    }
  }

  h1,
  h3 {
    display: inline-block;
    vertical-align: middle;
  }
}

.btn-alerts {
  position: relative;

  .btn-alerts-indicator {
    position: absolute;
    top: 2px;
    right: 2px;
    width: 6px;
    height: 6px;
    border-radius: 50%;

    .dark-theme &,
    .light-theme & {
      color: $dt-text-color;
      background: $red;
    }
  }
}

.dark-theme,
.light-theme {

  // BUTTONS
  // =======
  .btn-primary {
    background-color: $btn-primary-background;

    &:hover {
      background-image: linear-gradient(rgba($white, 0.2), rgba($white, 0.2));
    }

    &:active,
    &.active,
    &:active:hover,
    &.active:focus {
      background-color: $btn-primary-background;
      background-image: linear-gradient(rgba($black, 0.1), rgba($black, 0.1));
    }
  }

  .btn-success {
    background-color: $btn-success-background;

    &:hover {
      background-image: linear-gradient(rgba($white, 0.2), rgba($white, 0.2));
    }

    &:active,
    &.active,
    &:active:hover,
    &.active:focus {
      background-color: $btn-success-background;
      background-image: linear-gradient(rgba($black, 0.1), rgba($black, 0.1));
    }
  }

  .btn-danger {
    background-color: $btn-danger-background;

    &:hover {
      background-image: linear-gradient(rgba($white, 0.15), rgba($white, 0.15));
    }

    &:active,
    &.active,
    &:active:hover,
    &.active:focus {
      background-color: $btn-danger-background;
      background-image: linear-gradient(rgba($black, 0.1), rgba($black, 0.1));
    }
  }

  .btn-link {
    color: $btn-primary-background;
    text-transform: capitalize;
    background-color: transparent;

    &:hover,
    &:focus,
    &:active,
    &.active,
    &:active:hover,
    &.active:focus {
      color: $btn-primary-background;
      text-decoration: underline;
      outline: none;
      box-shadow: none;
    }
  }

  // DROPDOWN BUTTONS (SELECT, TOGGLE)
  // =================================
  .dropdown-select {
    width: 100%;
    min-width: $dropdown-min-width;

    .dropdown-toggle {
      width: 100%;
      padding: $dropdown-top-padding calc(#{$dropdown-horizontal-padding} * 2) $dropdown-bottom-padding $dropdown-horizontal-padding;  // Calculation prevents the text from flowing under the caret
      font-size: $dropdown-font-size;
      font-weight: 300;
      color: $dt-text-color;
      text-align: left;
      text-transform: capitalize;
      background-color: rgba($black, 0.3);
      fill: $dt-text-color;
      stroke: $dt-text-color;

      &:focus {
        box-shadow: inset 0 0 0 2px $pale-blue, 0 0 0 1px rgba($black, 0.1);
      }

      > .icon {
        position: absolute;
        top: 50%;
        right: $btn-horizontal-padding;
        transform: translateY(-50%);
        fill: $dt-text-color;
        stroke: $dt-text-color;

        @include print {
          display: none;
        }
      }

      span,
      .dropdown-select__selected-item {
        display: flex;
        width: auto;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }

    &.open .dropdown-toggle {
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;

      &:focus {
        box-shadow: inset 0 0 0 1px rgba($black, 0.1);
      }
    }
  }
}

.dark-theme {
  .btn-secondary {
    background-color: $btn-secondary-background;
    box-shadow: inset 0 0 0 2px rgba($btn-primary-background, 0.2);

    &:hover {
      background-color: rgba($btn-primary-background, 0.3);
      box-shadow: none;
    }

    &:active,
    &.active,
    &:active:hover,
    &.active:focus {
      color: $btn-text-color;
      background-color: rgba($btn-primary-background, 0.3);
      background-image: linear-gradient(rgba($black, 0.6), rgba($black, 0.6));
      box-shadow: inset 0 0 0 2px rgba($black, 0.6);
    }

    &:focus {
      box-shadow: 0 0 0 2px rgba($black, 0.4), inset 0 0 0 2px rgba($btn-primary-background, 0.2);
    }
  }

  .dropdown-select {
    .dropdown-toggle {
      &:hover:not(:disabled),
      &:hover:not(:disabled) .icon {
        color: $white;
        fill: $white;
        stroke: $white;
      }

      &:active,
      &.active,
      &:active:hover,
      &.active:focus {
        background-color: rgba($black, 0.5);
        box-shadow: none;
      }
    }

    &.open .dropdown-toggle {
      &,
      &:hover,
      &:hover .icon,
      .icon {
        color: $pale-blue;
        background-color: rgba($black, 0.3);
        fill: $pale-blue;
        stroke: $pale-blue;
      }

      // &:focus {
      //   box-shadow: none;
      // }
    }
  }
}

// Not merging with light-theme below in order to clean up light theme button styles
.light-theme {
  .btn-secondary {
    color: $btn-primary-background;
    background-color: $btn-secondary-background;
    box-shadow: inset 0 0 0 2px $btn-primary-background;

    &:hover {
      color: $white;
      background-color: $btn-primary-background;
      background-image: linear-gradient(rgba($black, 0.3), rgba($black, 0.3));
      box-shadow: none;
    }

    &:active,
    &.active,
    &:active:hover,
    &.active:focus {
      color: $white;
      background-color: rgba($pale-blue, 0.3);
      background-image: linear-gradient(rgba($black, 0.6), rgba($black, 0.6));
      box-shadow: inset 0 0 0 2px rgba($black, 0.6);
    }

    &:focus {
      box-shadow: 0 0 0 2px rgba($black, 0.4), inset 0 0 0 2px $btn-primary-background;
    }
  }

  .dropdown-select {
    .dropdown-toggle {
      color: $lt-text-color;
      background-color: $white;
      box-shadow: inset 0 0 0 1px rgba($black, 0.1);

      &:hover:not(:disabled),
      &:hover:not(:disabled) .icon,
      &:active,
      &.active,
      &:active:hover,
      &.active:focus {
        color: $black;
        fill: $black;
        stroke: $black;
      }

      .icon {
        fill: $lt-caret-color;
        stroke: $lt-caret-color;
      }
    }

    &.open .dropdown-toggle {
      background-color: $white;

      &,
      &:hover,
      &:hover .icon,
      .icon {
        color: $pale-blue;
        fill: $pale-blue;
        stroke: $pale-blue;
      }
    }
  }
}

.dark-theme,
// TODO: Should this be removed? .light-theme .configuration-sidebar
.light-theme .header {

  .dropdown-user-menu .dropdown-select:not(.open) .dropdown-toggle {

    &:hover:not(:disabled),
    &:hover:not(:disabled) .icon {
      color: $white;
      fill: $white;
      stroke: $white;
    }
  }

  .open:not(.dropdown-select) > .dropdown-toggle:not(.header-toggle, .btn-link),
  .open:not(.dropdown-select) > .dropdown-toggle.btn-primary {

    &,
    &:hover,
    &:active,
    &:focus {
      color: $pale-blue;
      background-color: rgba($pale-blue, 0.1);
      box-shadow: none;
    }
  }

  .open > .dropdown-toggle .caret {
    border-top-color: $pale-blue;
  }

  .btn-tertiary {

    &,
    &:hover {
      color: $dt-text-color;
      background-color: rgba($black, 0.2);
      fill: $dt-text-color;
      stroke: $dt-text-color;
    }

    &:hover:not(:disabled) {
      color: $pale-blue;
      fill: $pale-blue;
      stroke: $pale-blue;
    }
  }

  .open:not(.dropdown-select) > .dropdown-toggle.btn-tertiary {

    &,
    &:hover,
    &:active,
    &:focus {
      color: $pale-blue;
      background-color: rgba($black, 0.2);
      fill: $pale-blue;
      stroke: $pale-blue;
    }
  }

  .btn-save {

    &,
    &:hover {
      color: $white;
      background-color: $pale-blue;
      fill: $white;
      stroke: $white;
    }

    &:hover:not(:disabled) {
      color: $lt-button-color;
      fill: $lt-button-color;
      stroke: $lt-button-color;
    }
  }
}

.light-theme .header {
  .btn-tertiary {

    &,
    &:hover {
      color: $white;
      background-color: $silver-80;
      fill: $white;
      stroke: $white;
    }

    &:hover:not(:disabled) {
      color: $white;
      box-shadow: 0 0 0 1px $white;
      fill: $white;
      stroke: $white;
    }
  }
}

.light-theme {
  .configuration-sidebar .btn-outline {
    color: $pale-blue;
    background-color: $white !important;
    border: 0;
  }

  .configuration-sidebar .btn-primary,
  .sidebar-layout .btn-primary {

    &,
    &:hover,
    &:active,
    &.active {
      color: $white;
      background-color: $pale-blue;
      fill: $white;
      stroke: $white;
    }

    &:hover:not(:disabled),
    &:active:not(:disabled),
    &.active:not(:disabled) {
      color: $lt-button-color;
      fill: $lt-button-color;
      stroke: $lt-button-color;
    }
  }

  .content-item-chart .btn-primary {

    &,
    &:hover,
    &:active,
    &.active {
      color: $dt-text-color;
      background-color: rgba($pale-blue, 0.1);
      fill: $dt-text-color;
      stroke: $dt-text-color;
    }

    &:hover:not(:disabled),
    &:active:not(:disabled),
    &.active:not(:disabled) {
      color: $pale-blue;
      fill: $pale-blue;
      stroke: $pale-blue;
    }
  }

  .open:not(.dropdown-select) > .dropdown-toggle:not(.header-toggle, .btn-link),
  .open:not(.dropdown-select) > .dropdown-toggle.btn-primary {

    &,
    &:hover,
    &:active,
    &:focus {
      color: $pale-blue;
      background-color: rgba($pale-blue, 0.1);
      box-shadow: none;
    }
  }

  .open > .dropdown-toggle .caret {
    border-top-color: $pale-blue;
  }

  .btn-tertiary {

    &,
    &:hover {
      color: $lt-text-color;
      background-color: rgba($black, 0.2);
      fill: $lt-text-color;
      stroke: $lt-text-color;
    }

    &:hover:not(:disabled) {
      color: $pale-blue;
      fill: $pale-blue;
      stroke: $pale-blue;
    }
  }

  .btn-save {

    &,
    &:hover {
      color: $white;
      background-color: $pale-blue;
      fill: $white;
      stroke: $white;
    }

    &:hover:not(:disabled) {
      color: $lt-button-color;
      fill: $lt-button-color;
      stroke: $lt-button-color;
    }
  }
}
